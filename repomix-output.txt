This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-02-13T04:51:54.623Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

================================================================
Directory Structure
================================================================
backend/
  models/
    database.py
  scripts/
    ingest_historical_stats.py
    init_db.py
  visualizations/
    outputs/
      player_table.html
    visualize_playerstats.py
  app.py
  dockerfile
  ml_model.py
  readme.md
  requirements.txt
frontend/
  components/
    BettingTabs.jsx
    TopPicks.js
  pages/
    _app.js
    index.js
  styles/
    globals.css
  dockerfile
  package.json
  postcss.config.js
  tailwind.config.js
notes/
  testing/
    nba_api_sandbox.py
  nba_api.md
  pandas.md
.env.example
.gitignore
docker-compose.yml

================================================================
Files
================================================================

================
File: backend/models/database.py
================
# sqlalchemy simply provides a Python interface to interact with PostgreSQL
from sqlalchemy import create_engine, Column, Integer, String, DateTime, Boolean
from sqlalchemy.orm import declarative_base
import os

DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://localhost:5432/nba_betting')
engine = create_engine(DATABASE_URL)
Base = declarative_base()

# use Python classes instead of directly using SQL to create tables
class Player(Base):
    # __tablename__ is used by SQLAlchemy to create the table name
    __tablename__ = 'players'
    
    id = Column(Integer, primary_key=True)
    player_id = Column(Integer, unique=True)
    full_name = Column(String)
    is_active = Column(Boolean, default=True)

class PlayerStats(Base):
    __tablename__ = 'player_stats'
    
    id = Column(Integer, primary_key=True)
    game_id = Column(String)
    player_id = Column(Integer)
    game_date = Column(DateTime)
    season = Column(String)
    is_home_game = Column(Boolean)
    minutes_played = Column(String)
    points = Column(Integer)
    assists = Column(Integer)
    rebounds = Column(Integer)
    steals = Column(Integer)
    blocks = Column(Integer)
    turnovers = Column(Integer)
    plus_minus = Column(Integer)
    fg_made = Column(Integer)
    fg_attempted = Column(Integer)
    fg3_made = Column(Integer)
    fg3_attempted = Column(Integer)
    ft_made = Column(Integer)
    ft_attempted = Column(Integer)

================
File: backend/scripts/ingest_historical_stats.py
================
import sys
from pathlib import Path

# Add the backend directory to the path so we can import from models
backend_dir = Path(__file__).resolve().parent.parent
sys.path.append(str(backend_dir))

from nba_api.stats.static import players
from nba_api.stats.endpoints import leaguegamefinder
import pandas as pd
import time
from datetime import datetime
from typing import List, Dict
from sqlalchemy.orm import Session
from models.database import PlayerStats, Player, engine
import logging
import random
import requests
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('nba_stats_ingestion.log'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

class NBADataIngestion:
    def __init__(self):
        """Initialize the NBA data ingestion module."""
        self.current_season = datetime.now().year
        self.seasons = [
            f"{year}-{str(year + 1)[-2:]}" 
            for year in range(self.current_season - 5, self.current_season)
        ]
        
        retry_strategy = Retry(
            total=5,
            backoff_factor=2,
            status_forcelist=[429, 500, 502, 503, 504]
        )

        self.http_adapter = HTTPAdapter(max_retries=retry_strategy)
        self.http_session = requests.Session()
        self.http_session.mount("https://", self.http_adapter)
        self.http_session.headers.update({
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        })
        
    def get_active_players(self) -> List[Dict]:
        try:
            active_players = players.get_active_players()
            logger.info(f"Found {len(active_players)} active players")
            return active_players
        except Exception as e:
            logger.error(f"Error fetching active players: {e}")
            return []

    def get_player_games(self, player_id: int, season: str) -> pd.DataFrame:
        max_retries = 5  
        current_retry = 0
        base_delay = 2 
        
        while current_retry < max_retries:
            try:
                delay = base_delay * (2 ** current_retry) + random.uniform(1.0, 3.0)
                time.sleep(delay)
                
                player_games_query = leaguegamefinder.LeagueGameFinder(
                    player_or_team_abbreviation="P",
                    player_id_nullable=player_id,
                    season_nullable=season,
                    season_type_nullable="Regular Season",
                    timeout=180 
                )
                
                headers = {
                    'User-Agent': f'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/{random.randint(80, 108)}.0.0.0'
                }
                self.http_session.headers.update(headers)
                
                games_df = player_games_query.get_data_frames()[0]
                if not games_df.empty:
                    logger.info(f"Successfully retrieved data for player {player_id}")
                    return games_df
                
                return pd.DataFrame()
                    
            except Exception as e:
                current_retry += 1
                if current_retry < max_retries:
                    logger.warning(f"Attempt {current_retry} failed: {e}")
                    continue
                else:
                    logger.error(f"Failed after {max_retries} attempts: {e}")
                    return pd.DataFrame()

    def process_game_data(self, game_data: pd.Series, season: str) -> Dict:
        try:
            return {
                'game_id': game_data['GAME_ID'],
                'player_id': game_data['PLAYER_ID'],
                'game_date': pd.to_datetime(game_data['GAME_DATE']),
                'season': season,
                'is_home_game': '@' not in game_data['MATCHUP'],
                'minutes_played': game_data['MIN'],
                'points': game_data['PTS'],
                'rebounds': game_data['REB'],
                'assists': game_data['AST'],
                'steals': game_data['STL'],
                'blocks': game_data['BLK'],
                'turnovers': game_data['TOV'],
                'plus_minus': game_data['PLUS_MINUS'],
                'fg_made': game_data['FGM'],
                'fg_attempted': game_data['FGA'],
                'fg3_made': game_data['FG3M'],
                'fg3_attempted': game_data['FG3A'],
                'ft_made': game_data['FTM'],
                'ft_attempted': game_data['FTA']
            }
        except Exception as e:
            logger.error(f"Error processing game data: {e}")
            return None

    def store_player_data(self, player: Dict):
        with Session(engine) as session:
            try:
                existing_player = session.query(Player).filter_by(player_id=player['id']).first()
                
                if existing_player:
                    existing_player.full_name = player['full_name']
                    existing_player.is_active = True
                else:
                    player_record = Player(
                        player_id=player['id'],
                        full_name=player['full_name'],
                        is_active=True
                    )
                    session.add(player_record)
                
                session.commit()
            except Exception as e:
                logger.error(f"Error storing player data: {e}")
                session.rollback()

    def store_game_stats(self, stats_data: Dict):
        if not stats_data:
            return
            
        with Session(engine) as session:
            try:
                stats = PlayerStats(**stats_data)
                session.merge(stats)
                session.commit()
            except Exception as e:
                logger.error(f"Error storing game stats: {e}")
                session.rollback()

    def run_ingestion(self):
        logger.info("Starting historical data ingestion")
        logger.info(f"Will collect data for seasons: {', '.join(self.seasons)}")
        logger.info("=" * 80)
        
        active_players = self.get_active_players()
        total_players = len(active_players)
        
        for idx, player in enumerate(active_players, 1):
            try:
                logger.info(f"Processing player {idx}/{total_players}: {player['full_name']}")
                self.store_player_data(player)
                for season in self.seasons:
                    games_df = self.get_player_games(player['id'], season)
                    
                    if games_df.empty:
                        continue
                    
                    for _, game in games_df.iterrows():
                        processed_data = self.process_game_data(game, season)
                        self.store_game_stats(processed_data)
                    
                    logger.info(f"Processed {len(games_df)} games for {player['full_name']} in {season}")
                
            except Exception as e:
                logger.error(f"Error processing player {player['full_name']}: {e}")
                continue
            
            time.sleep(random.uniform(1, 3))
            logger.info("=" * 80)

        logger.info("Historical data ingestion completed")

if __name__ == "__main__":
    ingestion = NBADataIngestion()
    ingestion.run_ingestion()

================
File: backend/scripts/init_db.py
================
import os
import sys
from sqlalchemy import create_engine, inspect, text
from sqlalchemy.orm import sessionmaker
from sqlalchemy_utils import database_exists, create_database
import logging

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

from ..models.database import Base, Player, PlayerStats


def init_database():
    """checks if tables already exist, create all tables if they don't exist"""

    DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://localhost:5432/nba_betting')
    
    try:
        engine = create_engine(DATABASE_URL)
        
        if not database_exists(engine.url):
            logger.info(f"Creating database at {engine.url}")
            create_database(engine.url)
        
        logger.info("Creating tables if they don't exist...")
        Base.metadata.create_all(engine)
        
        inspector = inspect(engine)
        tables = inspector.get_table_names()
        logger.info("Created tables: " + ", ".join(tables))
        
        # Create a test session to verify connection
        Session = sessionmaker(bind=engine)
        session = Session()
        session.execute(text("SELECT 1"))
        session.close()
        
        logger.info("Database initialization completed successfully!")
        return True
        
    except Exception as e:
        logger.error(f"Error initializing database: {e}")
        return False

def verify_tables():
    """compare current database tables to a predefined set of tables to check if we succesfully created tables and if their columns are correct"""
    DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://localhost:5432/nba_betting')
    engine = create_engine(DATABASE_URL)
    inspector = inspect(engine)
    

    # based on our definition outlined in database.py
    required_tables = {
        'players': {
            'id', 'player_id', 'full_name', 'is_active'
        },
        'player_stats': {
            'id', 'game_id', 'player_id', 'game_date', 'season',
            'is_home_game', 'minutes_played', 'points', 'assists',
            'rebounds', 'steals', 'blocks', 'turnovers', 'plus_minus',
            'fg_made', 'fg_attempted', 'fg3_made', 'fg3_attempted',
            'ft_made', 'ft_attempted'
        }
    }
    
    is_valid_schema = True
    
    for table, required_columns in required_tables.items():
        if table not in inspector.get_table_names():
            logger.error(f"Missing table: {table}")
            is_valid_schema = False
            continue
            
        columns = {c['name'] for c in inspector.get_columns(table)}
        missing_columns = required_columns - columns
        
        if missing_columns:
            logger.error(f"Table {table} is missing columns: {missing_columns}")
            is_valid_schema = False
    
    return is_valid_schema


if __name__ == "__main__":
    logger.info("Starting database initialization...")
    
    if init_database():
        logger.info("Verifying database schema...")
        if verify_tables():
            logger.info("Database setup completed successfully!")
            sys.exit(0)
        else:
            logger.error("Database schema verification failed!")
            sys.exit(1)
    else:
        logger.error("Database initialization failed!")
        sys.exit(1)

================
File: backend/visualizations/outputs/player_table.html
================
<h3>Data Entries for Player 1626164</h3>
        <div style="max-height: 500px; overflow-y: auto; border: 1px solid #ccc;">
            <table border="1" class="dataframe">
  <thead>
    <tr style="text-align: center;">
      <th>id</th>
      <th>game_id</th>
      <th>player_id</th>
      <th>game_date</th>
      <th>season</th>
      <th>is_home_game</th>
      <th>minutes_played</th>
      <th>points</th>
      <th>assists</th>
      <th>rebounds</th>
      <th>steals</th>
      <th>blocks</th>
      <th>turnovers</th>
      <th>plus_minus</th>
      <th>fg_made</th>
      <th>fg_attempted</th>
      <th>fg3_made</th>
      <th>fg3_attempted</th>
      <th>ft_made</th>
      <th>ft_attempted</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>9166</td>
      <td>0022001065</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>27</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>32</td>
      <td>10</td>
      <td>18</td>
      <td>3</td>
      <td>8</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9167</td>
      <td>0022001053</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>18</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>2</td>
      <td>5</td>
      <td>17</td>
      <td>0</td>
      <td>4</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9168</td>
      <td>0022001039</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>34</td>
      <td>4</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>-5</td>
      <td>11</td>
      <td>21</td>
      <td>4</td>
      <td>9</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9169</td>
      <td>0022001024</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>21</td>
      <td>1</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-22</td>
      <td>5</td>
      <td>14</td>
      <td>0</td>
      <td>1</td>
      <td>11</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9170</td>
      <td>0022001009</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>16</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>11</td>
      <td>3</td>
      <td>12</td>
      <td>1</td>
      <td>4</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9171</td>
      <td>0022000992</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>31</td>
      <td>30</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-8</td>
      <td>11</td>
      <td>20</td>
      <td>1</td>
      <td>2</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9172</td>
      <td>0022000983</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>31</td>
      <td>5</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>12</td>
      <td>14</td>
      <td>27</td>
      <td>1</td>
      <td>6</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9173</td>
      <td>0022000972</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>32</td>
      <td>6</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>4</td>
      <td>-3</td>
      <td>11</td>
      <td>22</td>
      <td>1</td>
      <td>4</td>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9174</td>
      <td>0022000955</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>29</td>
      <td>31</td>
      <td>2</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>20</td>
      <td>13</td>
      <td>19</td>
      <td>2</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9175</td>
      <td>0022000941</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>21</td>
      <td>3</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>11</td>
      <td>9</td>
      <td>19</td>
      <td>1</td>
      <td>6</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9176</td>
      <td>0022000920</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>33</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>7</td>
      <td>14</td>
      <td>26</td>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9177</td>
      <td>0022000912</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>36</td>
      <td>1</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>-3</td>
      <td>12</td>
      <td>24</td>
      <td>4</td>
      <td>5</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9178</td>
      <td>0022000892</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>15</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>-15</td>
      <td>6</td>
      <td>13</td>
      <td>0</td>
      <td>2</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9179</td>
      <td>0022000883</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>30</td>
      <td>19</td>
      <td>7</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-4</td>
      <td>6</td>
      <td>14</td>
      <td>0</td>
      <td>3</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9180</td>
      <td>0022000873</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>44</td>
      <td>24</td>
      <td>7</td>
      <td>7</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>9</td>
      <td>24</td>
      <td>1</td>
      <td>4</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9181</td>
      <td>0022000860</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>27</td>
      <td>15</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>-4</td>
      <td>6</td>
      <td>18</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9182</td>
      <td>0022000843</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>23</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>5</td>
      <td>8</td>
      <td>19</td>
      <td>3</td>
      <td>10</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9183</td>
      <td>0022000827</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>23</td>
      <td>12</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>6</td>
      <td>0</td>
      <td>4</td>
      <td>16</td>
      <td>1</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9184</td>
      <td>0022000822</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>24</td>
      <td>7</td>
      <td>7</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>8</td>
      <td>9</td>
      <td>18</td>
      <td>2</td>
      <td>5</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9185</td>
      <td>0022000803</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>26</td>
      <td>27</td>
      <td>6</td>
      <td>6</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>24</td>
      <td>11</td>
      <td>24</td>
      <td>3</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9186</td>
      <td>0022000788</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>24</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>-9</td>
      <td>6</td>
      <td>13</td>
      <td>0</td>
      <td>2</td>
      <td>12</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9187</td>
      <td>0022000783</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>44</td>
      <td>35</td>
      <td>3</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>6</td>
      <td>0</td>
      <td>13</td>
      <td>31</td>
      <td>0</td>
      <td>6</td>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9188</td>
      <td>0022000768</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>36</td>
      <td>6</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>15</td>
      <td>11</td>
      <td>20</td>
      <td>6</td>
      <td>8</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9189</td>
      <td>0022000744</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>32</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>28</td>
      <td>11</td>
      <td>20</td>
      <td>3</td>
      <td>5</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9190</td>
      <td>0022000730</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>45</td>
      <td>4</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>7</td>
      <td>17</td>
      <td>24</td>
      <td>2</td>
      <td>5</td>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9191</td>
      <td>0022000171</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>21</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-3</td>
      <td>8</td>
      <td>19</td>
      <td>2</td>
      <td>7</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9192</td>
      <td>0022000703</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>42</td>
      <td>35</td>
      <td>3</td>
      <td>6</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>4</td>
      <td>10</td>
      <td>26</td>
      <td>4</td>
      <td>11</td>
      <td>11</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9193</td>
      <td>0022000684</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>16</td>
      <td>2</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>-5</td>
      <td>6</td>
      <td>14</td>
      <td>2</td>
      <td>5</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9194</td>
      <td>0022000670</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>25</td>
      <td>7</td>
      <td>7</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>6</td>
      <td>9</td>
      <td>21</td>
      <td>1</td>
      <td>5</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9195</td>
      <td>0022000664</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>27</td>
      <td>23</td>
      <td>3</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>19</td>
      <td>10</td>
      <td>19</td>
      <td>2</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9196</td>
      <td>0022000651</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>26</td>
      <td>4</td>
      <td>9</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>21</td>
      <td>11</td>
      <td>22</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9197</td>
      <td>0022000638</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>16</td>
      <td>5</td>
      <td>7</td>
      <td>2</td>
      <td>0</td>
      <td>5</td>
      <td>18</td>
      <td>6</td>
      <td>18</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9198</td>
      <td>0022000628</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>35</td>
      <td>6</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>5</td>
      <td>-3</td>
      <td>13</td>
      <td>22</td>
      <td>3</td>
      <td>8</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9199</td>
      <td>0022000607</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>27</td>
      <td>5</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>17</td>
      <td>10</td>
      <td>19</td>
      <td>3</td>
      <td>8</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9200</td>
      <td>0022000194</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>20</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>-4</td>
      <td>9</td>
      <td>20</td>
      <td>1</td>
      <td>6</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9201</td>
      <td>0022000577</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>35</td>
      <td>8</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>3</td>
      <td>12</td>
      <td>21</td>
      <td>3</td>
      <td>5</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9202</td>
      <td>0022000185</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>16</td>
      <td>6</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>6</td>
      <td>20</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9203</td>
      <td>0022000542</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>24</td>
      <td>17</td>
      <td>6</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>3</td>
      <td>13</td>
      <td>7</td>
      <td>12</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9204</td>
      <td>0022000526</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>43</td>
      <td>5</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>18</td>
      <td>15</td>
      <td>26</td>
      <td>1</td>
      <td>6</td>
      <td>12</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9205</td>
      <td>0022000508</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>22</td>
      <td>5</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>10</td>
      <td>9</td>
      <td>24</td>
      <td>0</td>
      <td>3</td>
      <td>4</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9206</td>
      <td>0022000496</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>33</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>-4</td>
      <td>13</td>
      <td>24</td>
      <td>4</td>
      <td>10</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9207</td>
      <td>0022000477</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>29</td>
      <td>34</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>28</td>
      <td>12</td>
      <td>17</td>
      <td>2</td>
      <td>2</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9208</td>
      <td>0022000462</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>23</td>
      <td>5</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>19</td>
      <td>7</td>
      <td>13</td>
      <td>5</td>
      <td>7</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9209</td>
      <td>0022000455</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>31</td>
      <td>23</td>
      <td>2</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>2</td>
      <td>9</td>
      <td>18</td>
      <td>2</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9210</td>
      <td>0022000433</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>22</td>
      <td>7</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-5</td>
      <td>9</td>
      <td>20</td>
      <td>0</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9211</td>
      <td>0022000417</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>27</td>
      <td>6</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>15</td>
      <td>10</td>
      <td>16</td>
      <td>1</td>
      <td>3</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9212</td>
      <td>0022000406</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>36</td>
      <td>4</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>14</td>
      <td>23</td>
      <td>3</td>
      <td>5</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9213</td>
      <td>0022000389</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>30</td>
      <td>3</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>7</td>
      <td>11</td>
      <td>21</td>
      <td>1</td>
      <td>4</td>
      <td>7</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9214</td>
      <td>0022000372</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>36</td>
      <td>8</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>8</td>
      <td>14</td>
      <td>27</td>
      <td>5</td>
      <td>9</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9215</td>
      <td>0022000365</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>18</td>
      <td>11</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>11</td>
      <td>7</td>
      <td>16</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9216</td>
      <td>0022000349</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>23</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>4</td>
      <td>7</td>
      <td>8</td>
      <td>14</td>
      <td>3</td>
      <td>7</td>
      <td>4</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9217</td>
      <td>0022000335</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>25</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-14</td>
      <td>9</td>
      <td>20</td>
      <td>0</td>
      <td>4</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9218</td>
      <td>0022000319</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>31</td>
      <td>24</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-1</td>
      <td>9</td>
      <td>19</td>
      <td>4</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9219</td>
      <td>0022000238</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>31</td>
      <td>5</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>10</td>
      <td>11</td>
      <td>21</td>
      <td>3</td>
      <td>9</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9220</td>
      <td>0022000222</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>24</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>8</td>
      <td>10</td>
      <td>18</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9221</td>
      <td>0022000208</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>12</td>
      <td>4</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>-10</td>
      <td>5</td>
      <td>21</td>
      <td>2</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9222</td>
      <td>0022000152</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>33</td>
      <td>0</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>-15</td>
      <td>11</td>
      <td>21</td>
      <td>1</td>
      <td>3</td>
      <td>10</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9223</td>
      <td>0022000135</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>25</td>
      <td>7</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>9</td>
      <td>19</td>
      <td>1</td>
      <td>5</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9224</td>
      <td>0022000123</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>23</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>5</td>
      <td>-17</td>
      <td>8</td>
      <td>18</td>
      <td>5</td>
      <td>12</td>
      <td>2</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9225</td>
      <td>0022000115</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>24</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>6</td>
      <td>14</td>
      <td>3</td>
      <td>8</td>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9226</td>
      <td>0022000091</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>45</td>
      <td>25</td>
      <td>8</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>14</td>
      <td>7</td>
      <td>13</td>
      <td>1</td>
      <td>3</td>
      <td>10</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9227</td>
      <td>0022000076</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>22</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>8</td>
      <td>-13</td>
      <td>9</td>
      <td>17</td>
      <td>3</td>
      <td>7</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9228</td>
      <td>0022000068</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>25</td>
      <td>7</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>-2</td>
      <td>10</td>
      <td>17</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9229</td>
      <td>0022000053</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>26</td>
      <td>8</td>
      <td>3</td>
      <td>6</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>24</td>
      <td>3</td>
      <td>9</td>
      <td>2</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9230</td>
      <td>0022000039</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>20</td>
      <td>5</td>
      <td>5</td>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>16</td>
      <td>8</td>
      <td>19</td>
      <td>1</td>
      <td>6</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9231</td>
      <td>0022000030</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>26</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>7</td>
      <td>3</td>
      <td>10</td>
      <td>21</td>
      <td>3</td>
      <td>7</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9232</td>
      <td>0022000004</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>22</td>
      <td>3</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>8</td>
      <td>7</td>
      <td>8</td>
      <td>15</td>
      <td>2</td>
      <td>6</td>
      <td>4</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9233</td>
      <td>0022101210</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>33</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>11</td>
      <td>13</td>
      <td>26</td>
      <td>2</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9234</td>
      <td>0022101189</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>32</td>
      <td>4</td>
      <td>7</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>14</td>
      <td>12</td>
      <td>22</td>
      <td>6</td>
      <td>9</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9235</td>
      <td>0022101155</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>41</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-5</td>
      <td>17</td>
      <td>28</td>
      <td>3</td>
      <td>6</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9236</td>
      <td>0022101145</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>22</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>5</td>
      <td>21</td>
      <td>2</td>
      <td>8</td>
      <td>10</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9237</td>
      <td>0022101118</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>35</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>7</td>
      <td>13</td>
      <td>22</td>
      <td>3</td>
      <td>5</td>
      <td>6</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9238</td>
      <td>0022101099</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>49</td>
      <td>10</td>
      <td>4</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>16</td>
      <td>16</td>
      <td>25</td>
      <td>2</td>
      <td>5</td>
      <td>15</td>
      <td>17</td>
    </tr>
    <tr>
      <td>9239</td>
      <td>0022101090</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>28</td>
      <td>7</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>4</td>
      <td>7</td>
      <td>15</td>
      <td>1</td>
      <td>4</td>
      <td>13</td>
      <td>16</td>
    </tr>
    <tr>
      <td>9240</td>
      <td>0022101066</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>31</td>
      <td>5</td>
      <td>7</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>3</td>
      <td>11</td>
      <td>21</td>
      <td>2</td>
      <td>5</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9241</td>
      <td>0022101056</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>32</td>
      <td>28</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>27</td>
      <td>10</td>
      <td>18</td>
      <td>1</td>
      <td>3</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9242</td>
      <td>0022101038</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>36</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>12</td>
      <td>15</td>
      <td>24</td>
      <td>5</td>
      <td>12</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9243</td>
      <td>0022101032</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>30</td>
      <td>27</td>
      <td>8</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>9</td>
      <td>11</td>
      <td>20</td>
      <td>4</td>
      <td>9</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9244</td>
      <td>0022101019</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>32</td>
      <td>30</td>
      <td>10</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>2</td>
      <td>38</td>
      <td>12</td>
      <td>25</td>
      <td>4</td>
      <td>10</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9245</td>
      <td>0022101003</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>22</td>
      <td>7</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>-21</td>
      <td>9</td>
      <td>18</td>
      <td>3</td>
      <td>7</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9246</td>
      <td>0022100983</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>23</td>
      <td>9</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>31</td>
      <td>7</td>
      <td>12</td>
      <td>4</td>
      <td>7</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9247</td>
      <td>0022100913</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>30</td>
      <td>7</td>
      <td>7</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>-6</td>
      <td>12</td>
      <td>24</td>
      <td>4</td>
      <td>8</td>
      <td>2</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9248</td>
      <td>0022100902</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>30</td>
      <td>5</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td>-21</td>
      <td>10</td>
      <td>24</td>
      <td>2</td>
      <td>8</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9249</td>
      <td>0022100893</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>25</td>
      <td>12</td>
      <td>5</td>
      <td>6</td>
      <td>0</td>
      <td>4</td>
      <td>26</td>
      <td>9</td>
      <td>16</td>
      <td>1</td>
      <td>4</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9250</td>
      <td>0022100882</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>43</td>
      <td>24</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>3</td>
      <td>-1</td>
      <td>7</td>
      <td>22</td>
      <td>1</td>
      <td>5</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9251</td>
      <td>0022100873</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>26</td>
      <td>4</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>4</td>
      <td>9</td>
      <td>11</td>
      <td>19</td>
      <td>3</td>
      <td>6</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9252</td>
      <td>0022100855</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>29</td>
      <td>26</td>
      <td>5</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>13</td>
      <td>10</td>
      <td>24</td>
      <td>3</td>
      <td>9</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9253</td>
      <td>0022100836</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>17</td>
      <td>7</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>11</td>
      <td>6</td>
      <td>19</td>
      <td>2</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9254</td>
      <td>0022100815</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>35</td>
      <td>3</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>13</td>
      <td>11</td>
      <td>23</td>
      <td>3</td>
      <td>8</td>
      <td>10</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9255</td>
      <td>0022100812</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>38</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>7</td>
      <td>14</td>
      <td>23</td>
      <td>5</td>
      <td>10</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9256</td>
      <td>0022100798</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>30</td>
      <td>11</td>
      <td>5</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>23</td>
      <td>5</td>
      <td>14</td>
      <td>1</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9257</td>
      <td>0022100783</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>32</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-6</td>
      <td>13</td>
      <td>27</td>
      <td>1</td>
      <td>8</td>
      <td>5</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9258</td>
      <td>0022100772</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>41</td>
      <td>35</td>
      <td>2</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>15</td>
      <td>13</td>
      <td>23</td>
      <td>3</td>
      <td>8</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9259</td>
      <td>0022100758</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>28</td>
      <td>1</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-12</td>
      <td>12</td>
      <td>24</td>
      <td>4</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9260</td>
      <td>0022100743</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>29</td>
      <td>9</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>17</td>
      <td>10</td>
      <td>26</td>
      <td>4</td>
      <td>10</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9261</td>
      <td>0022100731</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>43</td>
      <td>4</td>
      <td>12</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>18</td>
      <td>16</td>
      <td>28</td>
      <td>2</td>
      <td>6</td>
      <td>9</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9262</td>
      <td>0022100713</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>33</td>
      <td>3</td>
      <td>7</td>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>-3</td>
      <td>14</td>
      <td>35</td>
      <td>3</td>
      <td>13</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9263</td>
      <td>0022100697</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>11</td>
      <td>3</td>
      <td>7</td>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>5</td>
      <td>5</td>
      <td>23</td>
      <td>0</td>
      <td>6</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9264</td>
      <td>0022100682</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>28</td>
      <td>6</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>5</td>
      <td>11</td>
      <td>25</td>
      <td>1</td>
      <td>8</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9265</td>
      <td>0022100664</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>48</td>
      <td>6</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>18</td>
      <td>33</td>
      <td>5</td>
      <td>13</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9266</td>
      <td>0022100617</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>30</td>
      <td>30</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>20</td>
      <td>11</td>
      <td>18</td>
      <td>1</td>
      <td>5</td>
      <td>7</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9267</td>
      <td>0022100634</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>35</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>7</td>
      <td>11</td>
      <td>25</td>
      <td>6</td>
      <td>13</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9268</td>
      <td>0022100613</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>16</td>
      <td>3</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-3</td>
      <td>4</td>
      <td>13</td>
      <td>2</td>
      <td>7</td>
      <td>6</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9269</td>
      <td>0022100596</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>26</td>
      <td>3</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>5</td>
      <td>-22</td>
      <td>5</td>
      <td>15</td>
      <td>3</td>
      <td>5</td>
      <td>13</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9270</td>
      <td>0022100581</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>11</td>
      <td>4</td>
      <td>10</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-6</td>
      <td>5</td>
      <td>22</td>
      <td>0</td>
      <td>7</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9271</td>
      <td>0022100565</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>33</td>
      <td>4</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>15</td>
      <td>12</td>
      <td>24</td>
      <td>3</td>
      <td>6</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9272</td>
      <td>0022100549</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>29</td>
      <td>24</td>
      <td>3</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>26</td>
      <td>9</td>
      <td>19</td>
      <td>3</td>
      <td>9</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9273</td>
      <td>0022100529</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>22</td>
      <td>4</td>
      <td>6</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>-16</td>
      <td>7</td>
      <td>26</td>
      <td>1</td>
      <td>5</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9274</td>
      <td>0022100522</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>38</td>
      <td>5</td>
      <td>7</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>18</td>
      <td>12</td>
      <td>24</td>
      <td>6</td>
      <td>12</td>
      <td>8</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9275</td>
      <td>0022100505</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>30</td>
      <td>4</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>3</td>
      <td>-8</td>
      <td>10</td>
      <td>20</td>
      <td>3</td>
      <td>6</td>
      <td>7</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9276</td>
      <td>0022100490</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>13</td>
      <td>3</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>-8</td>
      <td>5</td>
      <td>19</td>
      <td>1</td>
      <td>5</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9277</td>
      <td>0022100483</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>30</td>
      <td>7</td>
      <td>7</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>19</td>
      <td>12</td>
      <td>23</td>
      <td>4</td>
      <td>7</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9278</td>
      <td>0022100469</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>24</td>
      <td>7</td>
      <td>9</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>14</td>
      <td>8</td>
      <td>16</td>
      <td>6</td>
      <td>11</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9279</td>
      <td>0022100456</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>26</td>
      <td>16</td>
      <td>5</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>32</td>
      <td>6</td>
      <td>15</td>
      <td>4</td>
      <td>8</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9280</td>
      <td>0022100316</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>15</td>
      <td>10</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>-4</td>
      <td>4</td>
      <td>9</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9281</td>
      <td>0022100294</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>30</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>7</td>
      <td>9</td>
      <td>18</td>
      <td>4</td>
      <td>6</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9282</td>
      <td>0022100282</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>32</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>15</td>
      <td>14</td>
      <td>27</td>
      <td>4</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9283</td>
      <td>0022100267</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>35</td>
      <td>3</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>-2</td>
      <td>14</td>
      <td>21</td>
      <td>2</td>
      <td>3</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9284</td>
      <td>0022100260</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>23</td>
      <td>4</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>1</td>
      <td>7</td>
      <td>17</td>
      <td>4</td>
      <td>7</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9285</td>
      <td>0022100251</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>28</td>
      <td>17</td>
      <td>7</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>13</td>
      <td>7</td>
      <td>12</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9286</td>
      <td>0022100237</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>19</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>4</td>
      <td>-7</td>
      <td>7</td>
      <td>20</td>
      <td>3</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9287</td>
      <td>0022100222</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>24</td>
      <td>0</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>8</td>
      <td>11</td>
      <td>21</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9288</td>
      <td>0022100206</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>29</td>
      <td>5</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>8</td>
      <td>7</td>
      <td>16</td>
      <td>2</td>
      <td>4</td>
      <td>13</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9289</td>
      <td>0022100195</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>26</td>
      <td>6</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>12</td>
      <td>9</td>
      <td>23</td>
      <td>3</td>
      <td>7</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9290</td>
      <td>0022100178</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>17</td>
      <td>7</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>31</td>
      <td>7</td>
      <td>17</td>
      <td>1</td>
      <td>5</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9291</td>
      <td>0022100168</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>12</td>
      <td>6</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>9</td>
      <td>5</td>
      <td>15</td>
      <td>2</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9292</td>
      <td>0022100153</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>18</td>
      <td>6</td>
      <td>9</td>
      <td>2</td>
      <td>0</td>
      <td>5</td>
      <td>22</td>
      <td>8</td>
      <td>17</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9293</td>
      <td>0022100137</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>38</td>
      <td>4</td>
      <td>6</td>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>3</td>
      <td>14</td>
      <td>21</td>
      <td>5</td>
      <td>9</td>
      <td>5</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9294</td>
      <td>0022100122</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>27</td>
      <td>5</td>
      <td>9</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>10</td>
      <td>8</td>
      <td>18</td>
      <td>4</td>
      <td>8</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9295</td>
      <td>0022100106</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>18</td>
      <td>3</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
      <td>6</td>
      <td>8</td>
      <td>7</td>
      <td>20</td>
      <td>2</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9296</td>
      <td>0022100088</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>27</td>
      <td>9</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>8</td>
      <td>9</td>
      <td>20</td>
      <td>0</td>
      <td>4</td>
      <td>9</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9297</td>
      <td>0022100062</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>31</td>
      <td>8</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>12</td>
      <td>28</td>
      <td>2</td>
      <td>6</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9298</td>
      <td>0022100033</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>28</td>
      <td>21</td>
      <td>4</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>-15</td>
      <td>9</td>
      <td>19</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9299</td>
      <td>0022100025</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>22</td>
      <td>4</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>8</td>
      <td>9</td>
      <td>19</td>
      <td>2</td>
      <td>6</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9300</td>
      <td>0022100012</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>12</td>
      <td>4</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-24</td>
      <td>3</td>
      <td>15</td>
      <td>2</td>
      <td>7</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9301</td>
      <td>0022201201</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>15</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>10</td>
      <td>3</td>
      <td>12</td>
      <td>1</td>
      <td>5</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9302</td>
      <td>0022201188</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>27</td>
      <td>3</td>
      <td>7</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>5</td>
      <td>9</td>
      <td>21</td>
      <td>2</td>
      <td>10</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9303</td>
      <td>0022201172</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>22</td>
      <td>10</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>5</td>
      <td>8</td>
      <td>14</td>
      <td>1</td>
      <td>5</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9304</td>
      <td>0022201160</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>27</td>
      <td>6</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>13</td>
      <td>9</td>
      <td>20</td>
      <td>2</td>
      <td>9</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9305</td>
      <td>0022201144</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>29</td>
      <td>5</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>3</td>
      <td>12</td>
      <td>8</td>
      <td>18</td>
      <td>1</td>
      <td>4</td>
      <td>12</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9306</td>
      <td>0022201125</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>24</td>
      <td>5</td>
      <td>7</td>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>10</td>
      <td>7</td>
      <td>19</td>
      <td>2</td>
      <td>6</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9307</td>
      <td>0022201110</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>32</td>
      <td>29</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>4</td>
      <td>8</td>
      <td>9</td>
      <td>18</td>
      <td>2</td>
      <td>4</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9308</td>
      <td>0022201105</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>32</td>
      <td>5</td>
      <td>8</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-13</td>
      <td>10</td>
      <td>16</td>
      <td>0</td>
      <td>1</td>
      <td>12</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9309</td>
      <td>0022201092</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>33</td>
      <td>5</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>7</td>
      <td>0</td>
      <td>11</td>
      <td>16</td>
      <td>1</td>
      <td>3</td>
      <td>10</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9310</td>
      <td>0022201064</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>46</td>
      <td>1</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-5</td>
      <td>18</td>
      <td>28</td>
      <td>3</td>
      <td>7</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9311</td>
      <td>0022201046</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>19</td>
      <td>2</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>6</td>
      <td>7</td>
      <td>17</td>
      <td>2</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9312</td>
      <td>0022201033</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>43</td>
      <td>30</td>
      <td>3</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>5</td>
      <td>-7</td>
      <td>13</td>
      <td>27</td>
      <td>1</td>
      <td>3</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9313</td>
      <td>0022201025</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>32</td>
      <td>1</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>-14</td>
      <td>12</td>
      <td>20</td>
      <td>0</td>
      <td>2</td>
      <td>8</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9314</td>
      <td>0022201013</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>28</td>
      <td>8</td>
      <td>3</td>
      <td>4</td>
      <td>0</td>
      <td>4</td>
      <td>-5</td>
      <td>11</td>
      <td>19</td>
      <td>2</td>
      <td>6</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9315</td>
      <td>0022200990</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>28</td>
      <td>44</td>
      <td>4</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>33</td>
      <td>17</td>
      <td>23</td>
      <td>6</td>
      <td>10</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9316</td>
      <td>0022200962</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>36</td>
      <td>10</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>17</td>
      <td>15</td>
      <td>25</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9317</td>
      <td>0022200950</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>35</td>
      <td>6</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>23</td>
      <td>12</td>
      <td>24</td>
      <td>6</td>
      <td>10</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9318</td>
      <td>0022200933</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>37</td>
      <td>7</td>
      <td>6</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>9</td>
      <td>15</td>
      <td>26</td>
      <td>3</td>
      <td>7</td>
      <td>4</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9319</td>
      <td>0022200910</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>24</td>
      <td>8</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>-1</td>
      <td>9</td>
      <td>21</td>
      <td>1</td>
      <td>5</td>
      <td>5</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9320</td>
      <td>0022200899</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>25</td>
      <td>8</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-6</td>
      <td>9</td>
      <td>21</td>
      <td>1</td>
      <td>7</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9321</td>
      <td>0022200885</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>19</td>
      <td>9</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>5</td>
      <td>-3</td>
      <td>6</td>
      <td>16</td>
      <td>1</td>
      <td>6</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9322</td>
      <td>0022200870</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>29</td>
      <td>32</td>
      <td>2</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>22</td>
      <td>13</td>
      <td>20</td>
      <td>0</td>
      <td>0</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9323</td>
      <td>0022200836</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>21</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>11</td>
      <td>7</td>
      <td>18</td>
      <td>3</td>
      <td>9</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9324</td>
      <td>0022200817</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>19</td>
      <td>6</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-3</td>
      <td>6</td>
      <td>15</td>
      <td>2</td>
      <td>8</td>
      <td>5</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9325</td>
      <td>0022200497</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>-9</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9326</td>
      <td>0022200444</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>42</td>
      <td>58</td>
      <td>5</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>11</td>
      <td>21</td>
      <td>35</td>
      <td>6</td>
      <td>12</td>
      <td>10</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9327</td>
      <td>0022200427</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>14</td>
      <td>4</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>4</td>
      <td>6</td>
      <td>22</td>
      <td>1</td>
      <td>9</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9328</td>
      <td>0022200384</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>14</td>
      <td>7</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-18</td>
      <td>5</td>
      <td>17</td>
      <td>2</td>
      <td>8</td>
      <td>2</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9329</td>
      <td>0022200373</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>25</td>
      <td>17</td>
      <td>3</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>-40</td>
      <td>6</td>
      <td>17</td>
      <td>1</td>
      <td>6</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9330</td>
      <td>0022200358</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>30</td>
      <td>11</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>-18</td>
      <td>4</td>
      <td>13</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9331</td>
      <td>0022200345</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>28</td>
      <td>20</td>
      <td>8</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>26</td>
      <td>7</td>
      <td>16</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9332</td>
      <td>0022200334</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>41</td>
      <td>8</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>8</td>
      <td>15</td>
      <td>25</td>
      <td>4</td>
      <td>6</td>
      <td>7</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9333</td>
      <td>0022200321</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>51</td>
      <td>6</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>23</td>
      <td>20</td>
      <td>25</td>
      <td>6</td>
      <td>7</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9334</td>
      <td>0022200307</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>44</td>
      <td>4</td>
      <td>8</td>
      <td>6</td>
      <td>0</td>
      <td>6</td>
      <td>14</td>
      <td>17</td>
      <td>28</td>
      <td>1</td>
      <td>6</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9335</td>
      <td>0022200289</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>27</td>
      <td>7</td>
      <td>11</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-4</td>
      <td>8</td>
      <td>27</td>
      <td>1</td>
      <td>7</td>
      <td>10</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9336</td>
      <td>0022200283</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>21</td>
      <td>5</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>10</td>
      <td>8</td>
      <td>17</td>
      <td>2</td>
      <td>7</td>
      <td>3</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9337</td>
      <td>0022200259</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>25</td>
      <td>5</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>4</td>
      <td>10</td>
      <td>24</td>
      <td>2</td>
      <td>6</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9338</td>
      <td>0022200240</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>20</td>
      <td>3</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>13</td>
      <td>7</td>
      <td>17</td>
      <td>5</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9339</td>
      <td>0022200232</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>49</td>
      <td>10</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>-4</td>
      <td>16</td>
      <td>31</td>
      <td>2</td>
      <td>9</td>
      <td>15</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9340</td>
      <td>0022200220</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>27</td>
      <td>9</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>3</td>
      <td>6</td>
      <td>8</td>
      <td>17</td>
      <td>2</td>
      <td>5</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9341</td>
      <td>0022200202</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>42</td>
      <td>25</td>
      <td>5</td>
      <td>8</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>-7</td>
      <td>11</td>
      <td>22</td>
      <td>2</td>
      <td>7</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9342</td>
      <td>0022200177</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>17</td>
      <td>6</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-27</td>
      <td>6</td>
      <td>19</td>
      <td>2</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9343</td>
      <td>0022200167</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>32</td>
      <td>10</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>26</td>
      <td>12</td>
      <td>23</td>
      <td>5</td>
      <td>7</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9344</td>
      <td>0022200148</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>43</td>
      <td>28</td>
      <td>5</td>
      <td>7</td>
      <td>1</td>
      <td>0</td>
      <td>6</td>
      <td>-9</td>
      <td>8</td>
      <td>16</td>
      <td>1</td>
      <td>1</td>
      <td>11</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9345</td>
      <td>0022200139</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>29</td>
      <td>24</td>
      <td>3</td>
      <td>3</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>19</td>
      <td>9</td>
      <td>20</td>
      <td>2</td>
      <td>7</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9346</td>
      <td>0022200130</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>25</td>
      <td>5</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>8</td>
      <td>21</td>
      <td>3</td>
      <td>7</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9347</td>
      <td>0022200106</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>18</td>
      <td>5</td>
      <td>7</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>11</td>
      <td>6</td>
      <td>18</td>
      <td>2</td>
      <td>7</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9348</td>
      <td>0022200094</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>30</td>
      <td>6</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>11</td>
      <td>14</td>
      <td>24</td>
      <td>1</td>
      <td>7</td>
      <td>1</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9349</td>
      <td>0022200079</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>16</td>
      <td>4</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>4</td>
      <td>6</td>
      <td>14</td>
      <td>0</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9350</td>
      <td>0022200055</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>34</td>
      <td>7</td>
      <td>2</td>
      <td>3</td>
      <td>0</td>
      <td>3</td>
      <td>32</td>
      <td>10</td>
      <td>19</td>
      <td>3</td>
      <td>8</td>
      <td>11</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9351</td>
      <td>0022200043</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>35</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>13</td>
      <td>13</td>
      <td>21</td>
      <td>5</td>
      <td>9</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9352</td>
      <td>0022200027</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>44</td>
      <td>33</td>
      <td>3</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-2</td>
      <td>11</td>
      <td>23</td>
      <td>3</td>
      <td>7</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9353</td>
      <td>0022200013</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>41</td>
      <td>28</td>
      <td>9</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>20</td>
      <td>10</td>
      <td>20</td>
      <td>1</td>
      <td>1</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9354</td>
      <td>0022301194</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>23</td>
      <td>7</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>20</td>
      <td>6</td>
      <td>16</td>
      <td>3</td>
      <td>8</td>
      <td>8</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9355</td>
      <td>0022301185</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>21</td>
      <td>6</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>4</td>
      <td>-1</td>
      <td>7</td>
      <td>12</td>
      <td>2</td>
      <td>4</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9356</td>
      <td>0022301165</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>37</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>9</td>
      <td>13</td>
      <td>24</td>
      <td>5</td>
      <td>12</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9357</td>
      <td>0022301156</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>12</td>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>-7</td>
      <td>1</td>
      <td>11</td>
      <td>0</td>
      <td>4</td>
      <td>10</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9358</td>
      <td>0022301138</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>25</td>
      <td>7</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>-6</td>
      <td>9</td>
      <td>16</td>
      <td>0</td>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9359</td>
      <td>0022301125</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>13</td>
      <td>13</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>7</td>
      <td>19</td>
      <td>3</td>
      <td>12</td>
      <td>1</td>
      <td>5</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9360</td>
      <td>0022301110</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>40</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>18</td>
      <td>13</td>
      <td>25</td>
      <td>5</td>
      <td>9</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9361</td>
      <td>0022301092</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>52</td>
      <td>9</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>8</td>
      <td>19</td>
      <td>28</td>
      <td>8</td>
      <td>16</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9362</td>
      <td>0022301069</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>27</td>
      <td>14</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-17</td>
      <td>4</td>
      <td>9</td>
      <td>0</td>
      <td>2</td>
      <td>6</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9363</td>
      <td>0022301059</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>17</td>
      <td>9</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-3</td>
      <td>5</td>
      <td>17</td>
      <td>2</td>
      <td>6</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9364</td>
      <td>0022301039</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>36</td>
      <td>4</td>
      <td>6</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>-1</td>
      <td>14</td>
      <td>28</td>
      <td>3</td>
      <td>10</td>
      <td>5</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9365</td>
      <td>0022301025</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>31</td>
      <td>32</td>
      <td>9</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>29</td>
      <td>14</td>
      <td>24</td>
      <td>3</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9366</td>
      <td>0022301010</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>32</td>
      <td>30</td>
      <td>2</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-10</td>
      <td>10</td>
      <td>15</td>
      <td>6</td>
      <td>8</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9367</td>
      <td>0022301002</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>18</td>
      <td>11</td>
      <td>9</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>9</td>
      <td>7</td>
      <td>15</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9368</td>
      <td>0022300976</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>23</td>
      <td>6</td>
      <td>9</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>-9</td>
      <td>11</td>
      <td>22</td>
      <td>0</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9369</td>
      <td>0022300961</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>21</td>
      <td>11</td>
      <td>6</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>17</td>
      <td>6</td>
      <td>18</td>
      <td>1</td>
      <td>8</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9370</td>
      <td>0022300955</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>23</td>
      <td>7</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>-16</td>
      <td>9</td>
      <td>20</td>
      <td>1</td>
      <td>6</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9371</td>
      <td>0022300934</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>27</td>
      <td>7</td>
      <td>6</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>12</td>
      <td>11</td>
      <td>22</td>
      <td>1</td>
      <td>7</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9372</td>
      <td>0022300870</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>24</td>
      <td>5</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>5</td>
      <td>-17</td>
      <td>7</td>
      <td>17</td>
      <td>2</td>
      <td>4</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9373</td>
      <td>0022300854</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>35</td>
      <td>3</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>11</td>
      <td>13</td>
      <td>27</td>
      <td>6</td>
      <td>11</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9374</td>
      <td>0022300818</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>21</td>
      <td>9</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>9</td>
      <td>8</td>
      <td>18</td>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9375</td>
      <td>0022300806</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>25</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>-15</td>
      <td>7</td>
      <td>24</td>
      <td>0</td>
      <td>4</td>
      <td>11</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9376</td>
      <td>0022300796</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>35</td>
      <td>8</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>4</td>
      <td>-14</td>
      <td>13</td>
      <td>21</td>
      <td>2</td>
      <td>6</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9377</td>
      <td>0022300787</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>5</td>
      <td>7</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9378</td>
      <td>0022300774</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>25</td>
      <td>9</td>
      <td>3</td>
      <td>3</td>
      <td>0</td>
      <td>3</td>
      <td>5</td>
      <td>7</td>
      <td>17</td>
      <td>0</td>
      <td>2</td>
      <td>11</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9379</td>
      <td>0022300757</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>32</td>
      <td>6</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>-3</td>
      <td>11</td>
      <td>21</td>
      <td>2</td>
      <td>8</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9380</td>
      <td>0022300725</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>32</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>5</td>
      <td>12</td>
      <td>21</td>
      <td>2</td>
      <td>6</td>
      <td>6</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9381</td>
      <td>0022300705</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>26</td>
      <td>14</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>22</td>
      <td>4</td>
      <td>11</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9382</td>
      <td>0022300690</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>24</td>
      <td>4</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>4</td>
      <td>8</td>
      <td>16</td>
      <td>3</td>
      <td>8</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9383</td>
      <td>0022300677</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>22</td>
      <td>8</td>
      <td>3</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>19</td>
      <td>9</td>
      <td>17</td>
      <td>4</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9384</td>
      <td>0022300661</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>41</td>
      <td>22</td>
      <td>7</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>18</td>
      <td>9</td>
      <td>23</td>
      <td>2</td>
      <td>10</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9385</td>
      <td>0022300655</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>44</td>
      <td>3</td>
      <td>4</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td>-4</td>
      <td>17</td>
      <td>26</td>
      <td>1</td>
      <td>2</td>
      <td>9</td>
      <td>11</td>
    </tr>
    <tr>
      <td>9386</td>
      <td>0022300636</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>62</td>
      <td>4</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
      <td>4</td>
      <td>1</td>
      <td>22</td>
      <td>37</td>
      <td>6</td>
      <td>12</td>
      <td>12</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9387</td>
      <td>0022300625</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>46</td>
      <td>3</td>
      <td>7</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>33</td>
      <td>17</td>
      <td>23</td>
      <td>6</td>
      <td>10</td>
      <td>6</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9388</td>
      <td>0022300612</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>41</td>
      <td>16</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-3</td>
      <td>6</td>
      <td>11</td>
      <td>2</td>
      <td>6</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9389</td>
      <td>0022300604</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>26</td>
      <td>8</td>
      <td>6</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>14</td>
      <td>9</td>
      <td>24</td>
      <td>1</td>
      <td>7</td>
      <td>7</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9390</td>
      <td>0022300588</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>52</td>
      <td>5</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>12</td>
      <td>18</td>
      <td>30</td>
      <td>6</td>
      <td>11</td>
      <td>10</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9391</td>
      <td>0022300567</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>16</td>
      <td>11</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>16</td>
      <td>5</td>
      <td>14</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9392</td>
      <td>0022300554</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>34</td>
      <td>7</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>17</td>
      <td>14</td>
      <td>22</td>
      <td>1</td>
      <td>6</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9393</td>
      <td>0022300531</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>31</td>
      <td>5</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>3</td>
      <td>20</td>
      <td>11</td>
      <td>22</td>
      <td>2</td>
      <td>6</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9394</td>
      <td>0022300511</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>20</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>6</td>
      <td>-31</td>
      <td>8</td>
      <td>14</td>
      <td>2</td>
      <td>6</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9395</td>
      <td>0022300503</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>24</td>
      <td>8</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>2</td>
      <td>11</td>
      <td>9</td>
      <td>17</td>
      <td>2</td>
      <td>6</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9396</td>
      <td>0022300489</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>20</td>
      <td>10</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>25</td>
      <td>9</td>
      <td>19</td>
      <td>2</td>
      <td>7</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <td>9397</td>
      <td>0022300473</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>35</td>
      <td>6</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>6</td>
      <td>-12</td>
      <td>11</td>
      <td>15</td>
      <td>5</td>
      <td>8</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9398</td>
      <td>0022300456</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>10</td>
      <td>6</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>12</td>
      <td>4</td>
      <td>16</td>
      <td>1</td>
      <td>4</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9399</td>
      <td>0022300450</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>21</td>
      <td>5</td>
      <td>4</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>13</td>
      <td>7</td>
      <td>17</td>
      <td>3</td>
      <td>8</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9400</td>
      <td>0022300436</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>35</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>11</td>
      <td>10</td>
      <td>18</td>
      <td>5</td>
      <td>7</td>
      <td>10</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9401</td>
      <td>0022300418</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>20</td>
      <td>7</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>4</td>
      <td>13</td>
      <td>9</td>
      <td>19</td>
      <td>1</td>
      <td>6</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9402</td>
      <td>0022300405</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>20</td>
      <td>10</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>-18</td>
      <td>6</td>
      <td>14</td>
      <td>1</td>
      <td>4</td>
      <td>7</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9403</td>
      <td>0022300387</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>24</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>-24</td>
      <td>9</td>
      <td>20</td>
      <td>0</td>
      <td>3</td>
      <td>6</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9404</td>
      <td>0022300363</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>26</td>
      <td>7</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>-9</td>
      <td>11</td>
      <td>25</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9405</td>
      <td>0022300347</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>41</td>
      <td>27</td>
      <td>8</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>2</td>
      <td>10</td>
      <td>24</td>
      <td>3</td>
      <td>11</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9406</td>
      <td>0022300333</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>28</td>
      <td>9</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-18</td>
      <td>11</td>
      <td>26</td>
      <td>1</td>
      <td>5</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9407</td>
      <td>0022300317</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>34</td>
      <td>12</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>16</td>
      <td>9</td>
      <td>15</td>
      <td>2</td>
      <td>6</td>
      <td>14</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9408</td>
      <td>0022300308</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>32</td>
      <td>7</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>15</td>
      <td>12</td>
      <td>23</td>
      <td>3</td>
      <td>6</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9409</td>
      <td>0022301228</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>28</td>
      <td>7</td>
      <td>7</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-6</td>
      <td>10</td>
      <td>14</td>
      <td>2</td>
      <td>2</td>
      <td>6</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9410</td>
      <td>0022301203</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>21</td>
      <td>6</td>
      <td>11</td>
      <td>1</td>
      <td>1</td>
      <td>7</td>
      <td>2</td>
      <td>6</td>
      <td>16</td>
      <td>1</td>
      <td>1</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9411</td>
      <td>0022300288</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>34</td>
      <td>7</td>
      <td>10</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>9</td>
      <td>9</td>
      <td>21</td>
      <td>3</td>
      <td>8</td>
      <td>13</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9412</td>
      <td>0022300260</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>8</td>
      <td>5</td>
      <td>5</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>-15</td>
      <td>2</td>
      <td>12</td>
      <td>0</td>
      <td>4</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9413</td>
      <td>0022300247</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>28</td>
      <td>11</td>
      <td>5</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>15</td>
      <td>10</td>
      <td>25</td>
      <td>1</td>
      <td>4</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9414</td>
      <td>0022300044</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>33</td>
      <td>40</td>
      <td>4</td>
      <td>5</td>
      <td>4</td>
      <td>1</td>
      <td>5</td>
      <td>28</td>
      <td>15</td>
      <td>21</td>
      <td>3</td>
      <td>4</td>
      <td>7</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9415</td>
      <td>0022300236</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>31</td>
      <td>25</td>
      <td>10</td>
      <td>8</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>23</td>
      <td>5</td>
      <td>15</td>
      <td>2</td>
      <td>3</td>
      <td>13</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9416</td>
      <td>0022300041</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>33</td>
      <td>28</td>
      <td>6</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>18</td>
      <td>9</td>
      <td>20</td>
      <td>0</td>
      <td>3</td>
      <td>10</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9417</td>
      <td>0022300214</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>26</td>
      <td>8</td>
      <td>5</td>
      <td>0</td>
      <td>1</td>
      <td>3</td>
      <td>2</td>
      <td>8</td>
      <td>21</td>
      <td>2</td>
      <td>7</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9418</td>
      <td>0022300035</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>24</td>
      <td>15</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>9</td>
      <td>7</td>
      <td>15</td>
      <td>2</td>
      <td>3</td>
      <td>8</td>
      <td>10</td>
    </tr>
    <tr>
      <td>9419</td>
      <td>0022300197</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>26</td>
      <td>31</td>
      <td>5</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>12</td>
      <td>22</td>
      <td>2</td>
      <td>7</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9420</td>
      <td>0022300131</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>35</td>
      <td>31</td>
      <td>13</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>-2</td>
      <td>10</td>
      <td>19</td>
      <td>5</td>
      <td>7</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9421</td>
      <td>0022300062</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>32</td>
      <td>8</td>
      <td>6</td>
      <td>1</td>
      <td>0</td>
      <td>6</td>
      <td>5</td>
      <td>13</td>
      <td>21</td>
      <td>3</td>
      <td>8</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9422</td>
      <td>0022400694</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>37</td>
      <td>5</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>-17</td>
      <td>11</td>
      <td>18</td>
      <td>2</td>
      <td>6</td>
      <td>13</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9423</td>
      <td>0022400685</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>31</td>
      <td>11</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>28</td>
      <td>12</td>
      <td>23</td>
      <td>5</td>
      <td>11</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9424</td>
      <td>0022400672</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>41</td>
      <td>28</td>
      <td>8</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>9</td>
      <td>3</td>
      <td>11</td>
      <td>19</td>
      <td>2</td>
      <td>7</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9425</td>
      <td>0022400659</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>26</td>
      <td>8</td>
      <td>7</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-8</td>
      <td>9</td>
      <td>21</td>
      <td>5</td>
      <td>10</td>
      <td>3</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9426</td>
      <td>0022400645</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>18</td>
      <td>7</td>
      <td>6</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>7</td>
      <td>5</td>
      <td>18</td>
      <td>0</td>
      <td>8</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9427</td>
      <td>0022400613</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>32</td>
      <td>6</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>17</td>
      <td>14</td>
      <td>24</td>
      <td>3</td>
      <td>8</td>
      <td>1</td>
      <td>1</td>
    </tr>
    <tr>
      <td>9428</td>
      <td>0022400603</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>15</td>
      <td>4</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>6</td>
      <td>-20</td>
      <td>6</td>
      <td>14</td>
      <td>1</td>
      <td>4</td>
      <td>2</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9429</td>
      <td>0022400586</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>42</td>
      <td>35</td>
      <td>3</td>
      <td>5</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-5</td>
      <td>11</td>
      <td>22</td>
      <td>1</td>
      <td>5</td>
      <td>12</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9430</td>
      <td>0022400573</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>37</td>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>1</td>
      <td>4</td>
      <td>14</td>
      <td>10</td>
      <td>24</td>
      <td>4</td>
      <td>9</td>
      <td>13</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9431</td>
      <td>0022400556</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>35</td>
      <td>5</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>5</td>
      <td>6</td>
      <td>12</td>
      <td>23</td>
      <td>7</td>
      <td>14</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9432</td>
      <td>0022400547</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>30</td>
      <td>8</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>1</td>
      <td>-4</td>
      <td>10</td>
      <td>20</td>
      <td>4</td>
      <td>9</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9433</td>
      <td>0022400533</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>34</td>
      <td>4</td>
      <td>5</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>16</td>
      <td>12</td>
      <td>20</td>
      <td>6</td>
      <td>12</td>
      <td>4</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9434</td>
      <td>0022400522</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>40</td>
      <td>20</td>
      <td>12</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>10</td>
      <td>9</td>
      <td>21</td>
      <td>0</td>
      <td>8</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9435</td>
      <td>0022400502</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>39</td>
      <td>39</td>
      <td>10</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>2</td>
      <td>14</td>
      <td>25</td>
      <td>2</td>
      <td>8</td>
      <td>9</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9436</td>
      <td>0022400494</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>10</td>
      <td>10</td>
      <td>4</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>9</td>
      <td>3</td>
      <td>16</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9437</td>
      <td>0022400480</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>36</td>
      <td>20</td>
      <td>9</td>
      <td>8</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>-16</td>
      <td>7</td>
      <td>15</td>
      <td>2</td>
      <td>5</td>
      <td>4</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9438</td>
      <td>0022400453</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>30</td>
      <td>16</td>
      <td>9</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-1</td>
      <td>4</td>
      <td>20</td>
      <td>2</td>
      <td>8</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9439</td>
      <td>0022400369</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>25</td>
      <td>17</td>
      <td>6</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>-9</td>
      <td>5</td>
      <td>10</td>
      <td>0</td>
      <td>3</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9440</td>
      <td>0022401219</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>28</td>
      <td>5</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>7</td>
      <td>14</td>
      <td>4</td>
      <td>8</td>
      <td>10</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9441</td>
      <td>0022401214</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>34</td>
      <td>8</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>10</td>
      <td>13</td>
      <td>27</td>
      <td>6</td>
      <td>13</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9442</td>
      <td>0022400352</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>25</td>
      <td>7</td>
      <td>4</td>
      <td>4</td>
      <td>0</td>
      <td>3</td>
      <td>-1</td>
      <td>8</td>
      <td>21</td>
      <td>1</td>
      <td>5</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9443</td>
      <td>0022400346</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>21</td>
      <td>7</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>5</td>
      <td>-9</td>
      <td>6</td>
      <td>16</td>
      <td>1</td>
      <td>6</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9444</td>
      <td>0022400330</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>37</td>
      <td>28</td>
      <td>2</td>
      <td>4</td>
      <td>1</td>
      <td>0</td>
      <td>3</td>
      <td>-10</td>
      <td>6</td>
      <td>20</td>
      <td>3</td>
      <td>10</td>
      <td>13</td>
      <td>14</td>
    </tr>
    <tr>
      <td>9445</td>
      <td>0022400057</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>29</td>
      <td>5</td>
      <td>9</td>
      <td>2</td>
      <td>1</td>
      <td>5</td>
      <td>12</td>
      <td>10</td>
      <td>21</td>
      <td>4</td>
      <td>10</td>
      <td>5</td>
      <td>5</td>
    </tr>
    <tr>
      <td>9446</td>
      <td>0022400303</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>27</td>
      <td>9</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>8</td>
      <td>20</td>
      <td>3</td>
      <td>8</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9447</td>
      <td>0022400297</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>31</td>
      <td>4</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>-9</td>
      <td>8</td>
      <td>18</td>
      <td>3</td>
      <td>9</td>
      <td>12</td>
      <td>13</td>
    </tr>
    <tr>
      <td>9448</td>
      <td>0022400039</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>34</td>
      <td>26</td>
      <td>10</td>
      <td>2</td>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>29</td>
      <td>10</td>
      <td>17</td>
      <td>3</td>
      <td>7</td>
      <td>3</td>
      <td>4</td>
    </tr>
    <tr>
      <td>9449</td>
      <td>0022400257</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>33</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>-19</td>
      <td>12</td>
      <td>23</td>
      <td>2</td>
      <td>7</td>
      <td>7</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9450</td>
      <td>0022400249</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>17</td>
      <td>5</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>-5</td>
      <td>5</td>
      <td>14</td>
      <td>1</td>
      <td>7</td>
      <td>6</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9451</td>
      <td>0022400234</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>40</td>
      <td>44</td>
      <td>7</td>
      <td>6</td>
      <td>0</td>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>15</td>
      <td>29</td>
      <td>6</td>
      <td>13</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9452</td>
      <td>0022400018</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>12</td>
      <td>4</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>-29</td>
      <td>2</td>
      <td>10</td>
      <td>0</td>
      <td>0</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9453</td>
      <td>0022400227</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>31</td>
      <td>18</td>
      <td>5</td>
      <td>3</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>-16</td>
      <td>6</td>
      <td>16</td>
      <td>1</td>
      <td>4</td>
      <td>5</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9454</td>
      <td>0022400006</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>34</td>
      <td>31</td>
      <td>4</td>
      <td>2</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>11</td>
      <td>20</td>
      <td>5</td>
      <td>9</td>
      <td>4</td>
      <td>6</td>
    </tr>
    <tr>
      <td>9455</td>
      <td>0022400209</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>43</td>
      <td>23</td>
      <td>12</td>
      <td>1</td>
      <td>2</td>
      <td>0</td>
      <td>2</td>
      <td>-9</td>
      <td>9</td>
      <td>22</td>
      <td>3</td>
      <td>10</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9456</td>
      <td>0022400190</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>13</td>
      <td>12</td>
      <td>6</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>-17</td>
      <td>5</td>
      <td>13</td>
      <td>1</td>
      <td>8</td>
      <td>2</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9457</td>
      <td>0022400178</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>22</td>
      <td>9</td>
      <td>4</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>8</td>
      <td>9</td>
      <td>17</td>
      <td>2</td>
      <td>7</td>
      <td>2</td>
      <td>3</td>
    </tr>
    <tr>
      <td>9458</td>
      <td>0022400167</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>38</td>
      <td>13</td>
      <td>6</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>1</td>
      <td>3</td>
      <td>18</td>
      <td>0</td>
      <td>6</td>
      <td>7</td>
      <td>7</td>
    </tr>
    <tr>
      <td>9459</td>
      <td>0022400149</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>36</td>
      <td>28</td>
      <td>9</td>
      <td>9</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>7</td>
      <td>9</td>
      <td>23</td>
      <td>2</td>
      <td>10</td>
      <td>8</td>
      <td>9</td>
    </tr>
    <tr>
      <td>9460</td>
      <td>0022400131</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>38</td>
      <td>40</td>
      <td>8</td>
      <td>5</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>20</td>
      <td>11</td>
      <td>18</td>
      <td>5</td>
      <td>9</td>
      <td>13</td>
      <td>15</td>
    </tr>
    <tr>
      <td>9461</td>
      <td>0022400111</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>39</td>
      <td>33</td>
      <td>2</td>
      <td>3</td>
      <td>1</td>
      <td>0</td>
      <td>2</td>
      <td>2</td>
      <td>11</td>
      <td>23</td>
      <td>3</td>
      <td>8</td>
      <td>8</td>
      <td>8</td>
    </tr>
    <tr>
      <td>9462</td>
      <td>0022400095</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>True</td>
      <td>37</td>
      <td>21</td>
      <td>5</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>7</td>
      <td>4</td>
      <td>12</td>
      <td>2</td>
      <td>8</td>
      <td>11</td>
      <td>12</td>
    </tr>
    <tr>
      <td>9463</td>
      <td>0022400085</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>35</td>
      <td>23</td>
      <td>4</td>
      <td>3</td>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>-10</td>
      <td>9</td>
      <td>21</td>
      <td>4</td>
      <td>10</td>
      <td>1</td>
      <td>2</td>
    </tr>
    <tr>
      <td>9464</td>
      <td>0022400071</td>
      <td>1626164</td>
      <td>NaT</td>
      <td>None</td>
      <td>False</td>
      <td>32</td>
      <td>15</td>
      <td>6</td>
      <td>4</td>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>-4</td>
      <td>5</td>
      <td>9</td>
      <td>4</td>
      <td>5</td>
      <td>1</td>
      <td>2</td>
    </tr>
  </tbody>
</table>
        </div>

================
File: backend/visualizations/visualize_playerstats.py
================
import pandas as pd
from IPython.display import HTML, display
from sqlalchemy.orm import Session
from models.database import Player, PlayerStats, engine

def display_player_table(player_id):
    with Session(engine) as session:
        query = session.query(PlayerStats).filter(PlayerStats.player_id == player_id)
        df = pd.read_sql(query.statement, session.bind)
        player_info = session.query(Player).filter(Player.player_id == player_id).first()
        player_name = player_info.full_name if player_info else f"Player {player_id}"

    if df.empty:
        print(f"No data found for {player_name}")
        return

    df['game_date'] = pd.to_datetime(df['game_date'])
    df = df.sort_values('game_date')

    html_table = df.to_html(index=False, justify='center')
    html_code = f"""
        <h3>Data Entries for {player_name}</h3>
        <div style="max-height: 500px; overflow-y: auto; border: 1px solid #ccc;">
            {html_table}
        </div>
    """

    # Save HTML to a file
    with open("visualizations/outputs/player_table.html", "w") as file:
        file.write(html_code)
    print("HTML table saved to player_table.html. Open this file in your browser to view the table.")


if __name__ == "__main__":
    display_player_table(1626164)

================
File: backend/app.py
================
from flask import Flask, jsonify
from flask_cors import CORS # allows frontend to make request to the server
import requests
from datetime import datetime
import os
from dotenv import load_dotenv  
from ml_model import NBAPredictor 

load_dotenv()  # loads environment variables from .env file

app = Flask(__name__) # initialize Flask application, __name__ represents the name of the current module
CORS(app) # enables Cross-Origin Resource Sharing, allow requests from different origins


API_KEY = os.getenv('ODDS_API_KEY')
if not API_KEY: # if API_KEY is empty or falsy
    raise ValueError("Missing ODDS_API_KEY environment variable. Make sure you have a .env file with this value.")

BASE_URL = "https://api.the-odds-api.com/v4"

def calculate_confidence(odds):
    """
    Calculate confidence score based on betting odds.
    Returns a value between 0 and 1.
    """
    try:
        if odds > 0:
            probability = 100 / (odds + 100)
        else:
            probability = abs(odds) / (abs(odds) + 100)
        return round(probability, 3)
    except (TypeError, ZeroDivisionError):
        return None

# decorator, get_picks() will run when a HTTP request hits the server with the path "/api/picks", return value is sent back to client
@app.route("/api/picks", methods=["GET"]) # methods=["GET"] is not necssary since it is the default HTTP method, included for clarity
def get_picks():
    try:
        response = requests.get(
            # f-string
            f"{BASE_URL}/sports/basketball_nba/odds",
            params={
                "apiKey": API_KEY,
                "regions": "us",
                "markets": "h2h",
                "oddsFormat": "american"
            }
        )

        if response.status_code != 200: # 200 indicates a successful request
            print(f"API Error: {response.status_code}", response.text)
            # HTTP status code for the response, 500 indicates Internal Server Error
            return jsonify({"error": "Failed to fetch from Odds API"}), 500
            
        games = response.json()
        processed_games = []
        
        for idx, game in enumerate(games):
            try:
                # Skip games without odds data
                if not game.get('bookmakers'):
                    continue
                    
                bookmaker = game['bookmakers'][0]
                odds = bookmaker['markets'][0]['outcomes']
                
                # Find home and away team odds
                home_odds = None
                away_odds = None
                for odd in odds:
                    if odd['name'] == game['home_team']:
                        home_odds = odd['price']
                        break

                for odd in odds:
                    if odd['name'] == game['away_team']:
                        away_odds = odd['price']
                        break
                
                if home_odds is None or away_odds is None:
                    continue
                
                # Calculate confidence scores
                home_confidence = calculate_confidence(home_odds)
                away_confidence = calculate_confidence(away_odds)
                
                if home_confidence is None or away_confidence is None:
                    continue
                
                # Determine prediction
                if home_confidence > away_confidence:
                    predicted_winner = game['home_team']
                    confidence = home_confidence
                else:
                    predicted_winner = game['away_team']
                    confidence = away_confidence

                processed_games.append({
                    "id": str(idx + 1),
                    "team": game['home_team'],
                    "opponent": game['away_team'],
                    "prediction": f"{predicted_winner} Win",
                    "confidence": confidence,
                    "start_time": game['commence_time'],
                    "odds": {
                        "home_odds": home_odds,
                        "away_odds": away_odds
                    }
                })
                
            except Exception as e:
                print(f"Error processing game {idx}: {str(e)}")
                continue
        
        return jsonify(processed_games)

    except requests.exceptions.RequestException as e:
        print(f"Request error: {str(e)}")
        return jsonify({"error": "Failed to fetch game data"}), 500
    except Exception as e:
        print(f"Unexpected error: {str(e)}")
        return jsonify({"error": "An unexpected error occurred"}), 500
    

@app.route("/api/props", methods=["GET"])
def get_player_props():
    try:
        # Get all NBA games
        games_response = requests.get(
            f"{BASE_URL}/sports/basketball_nba/events",
            params={
                "apiKey": API_KEY
            }
        )
        
        if games_response.status_code != 200:
            print(f"Games API Error: {games_response.status_code}", games_response.text)
            return jsonify({"error": "Failed to fetch games"}), 500
            
        games = games_response.json()
        processed_props = []
        
        # For each game, get player props
        for game in games:
            try:
                props_response = requests.get(
                    f"{BASE_URL}/sports/basketball_nba/events/{game['id']}/odds",
                    params={
                        "apiKey": API_KEY,
                        "regions": "us",
                        "markets": "player_points,player_rebounds,player_assists",
                        "oddsFormat": "american",
                        "bookmakers": "draftkings"
                    }
                )
                
                if props_response.status_code != 200:
                    continue
                    
                props_data = props_response.json()
                
                # Process bookmaker data
                if not props_data.get('bookmakers'):
                    continue
                    
                bookmaker = props_data['bookmakers'][0]  # DraftKings
                
                for market in bookmaker['markets']:
                    for outcome in market['outcomes']:
                        confidence = calculate_confidence(outcome['price'])
                        if confidence is None:
                            continue
                            
                        processed_props.append({
                            "id": f"{game['id']}-{market['key']}-{outcome['name']}",
                            "game": f"{game['home_team']} vs {game['away_team']}",
                            "start_time": game['commence_time'],
                            "name": outcome['name'], 
                            "player": outcome['description'],
                            "market": market['key'].replace('player_', '').title(),
                            "line": outcome['point'],
                            "odds": outcome['price'],
                            "confidence": confidence
                        })
                        
            except Exception as e:
                print(f"Error processing props for game {game['id']}: {str(e)}")
                continue

        # Sort by confidence descending
        processed_props.sort(key=lambda x: x['confidence'], reverse=True)
        
        # Return top 10 most confident props
        return jsonify(processed_props[:10])

    except requests.exceptions.RequestException as e:
        print(f"Request error: {str(e)}")
        return jsonify({"error": "Failed to fetch prop data"}), 500
    except Exception as e:
        print(f"Unexpected error: {str(e)}")
        return jsonify({"error": "An unexpected error occurred"}), 500

if __name__ == "__main__": # starts the Flask Development Server
    app.run(debug=True, host='0.0.0.0')

================
File: backend/dockerfile
================
# Use the official Python image
FROM python:3.9

# Set the working directory
WORKDIR /app

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy the application code
COPY . .

# Expose the Flask default port
EXPOSE 5000

# Run the Flask app
CMD ["flask", "run", "--host=0.0.0.0"]

================
File: backend/ml_model.py
================
from typing import Tuple, Dict
import torch
import torch.nn as nn
import numpy as np

class NBAPredictor(nn.Module):
    # dunder method (double underscore method): __init__ automatically called when a new instance of a class is created
    def __init__(self, input_size: int = 15): # int is the type hint, 15 is the default value
        return None

# type hints specify return type, better code readability
def get_prediction_with_confidence(model: NBAPredictor, game_data: Dict, n_samples: int = 100) -> Tuple[float, float]:
    return 0.0, 0.0

================
File: backend/readme.md
================
## <u> backend </u>

### backend structure

backend/  
├── models/  
│   └── database.py        
├── scripts/  
│   └── ingest_historical_stats.py  
├── visualizations/  
│   ├── outputs/          
│   └── visualize_playerstats.py    
├── app.py  
├── dockerfile                 
├── init_db.py                   
└── requirements.txt     
<hr>
<br>
```database.py``` defines what data can be stored (table structures) -> ```db_init.py``` creates the actual database and tables -> ```ingestion.py``` uses ```database.py``` and ```db_init.py``` to fetch NBA data and stores it in the correct format.

<br>

Using the SQLAlchemy ORM (Object Relational Mapping) in ```database.py```, the application is able to translate between Python objects and database records, meaning the database records can be manipulated in Python.


<hr>


### <u>models/database.py </u>
defines the SQLAlchemy ORM models for the player stats database

ORM (Object-Relational Mapping) models allow us to interact with database records with Python objects without writing SQL queries

example:  
instead of 
```sql 
SELECT * FROM players WHERE player_id = 123;
```
we can write
```python
player = Player.query.filter_by(player_id=123).first()
```
<hr>

### <u>  ingest_historical_stats.py </u>
fetches and stores player statistics from the last 5 regular seasons making calls to [nba_api](https://github.com/swar/nba_api) (created by [swar](https://github.com/swar))

- comprehensive logging functionality
- batch processing with rate limiting  

#### Core components
##### NBADataIngestion

- Manages player data retrieval and processing
- Implements session management

##### Database Storage

- table ```players```: basic player information  
- table ```player_stats```: per-game statistics for each player


<hr>


### <u> init_db.py </u>
Initializes PostgreSQL database for the app

- Sets up required tables and schema
- database configuration verification
- detailed logging


#### Database Schema
<u>Players Table</u>

```properties
id: Primary key
player_id: Unique NBA ID
full_name: Player name
is_active: Active status
```


<u> PlayerStats Table </u>

```properties
id: Primary key
game_id: Game identifier
player_id: Foreign key to Players
game_date: DateTime
season: String
is_home_game: Boolean
minutes_played: String
points: Integer
assists: Integer
rebounds: Integer
steals: Integer
blocks: Integer
turnovers: Integer
plus_minus: Integer
fg_made: Integer
fg_attempted: Integer
fg3_made: Integer
fg3_attempted: Integer
ft_made: Integer
ft_attempted: Integer
```

================
File: backend/requirements.txt
================
requests>=2.26.0
Flask>=2.0.0
flask-cors>=4.0.0
python-dotenv>=0.19.0
pandas>=1.3.0
numpy>=1.21.0
typing>=3.7.4
torch>=2.0.0
nba_api==1.7.0
sqlalchemy>=2.0.0
psycopg2-binary>=2.9.0
SQLAlchemy-Utils>=0.41.0

================
File: frontend/components/BettingTabs.jsx
================
import { useState, useEffect } from 'react';
import * as Tabs from '@radix-ui/react-tabs';

export default function BettingTabs() {
    const [propsData, setPropsData] = useState([]);
    const [games, setGames] = useState([]);

    const [isLoadingProps, setIsLoadingProps] = useState(true);
    const [isLoadingGames, setIsLoadingGames] = useState(true);

    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchProps = async () => {
            try {
                const response = await fetch('http://localhost:5001/api/props');
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                const data = await response.json();
                setPropsData(data);
            } catch (e) {
                setError('Failed to load props: ' + e.message);
            } finally {
                setIsLoadingProps(false);
            }
        };

        const fetchGames = async () => {
            try {
                const response = await fetch('http://localhost:5001/api/picks');
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                const data = await response.json();
                setGames(data);
            } catch (e) {
                setError('Failed to load games: ' + e.message);
            } finally {
                setIsLoadingGames(false);
            }
        };

        fetchProps();
        fetchGames();

        // Refresh data every 5 minutes
        const interval = setInterval(() => {
            fetchProps();
            fetchGames();
        }, 300000);

        return () => clearInterval(interval);
    }, []);

    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleString('en-US', {
            weekday: 'short',
            month: 'short',
            day: 'numeric',
            hour: 'numeric',
            minute: '2-digit'
        });
    };

    const formatOdds = (odds) => (odds > 0 ? `+${odds}` : odds);

    return (
        <Tabs.Root defaultValue="games" className="w-full">
            {/* --- Tabs List --- */}
            <Tabs.List className="flex border-b border-gray-200">
                <Tabs.Trigger 
                    value="games" 
                    className="px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 cursor-pointer border-b-2 border-transparent data-[state=active]:border-blue-500 data-[state=active]:text-blue-600"
                >
                    Game Lines
                </Tabs.Trigger>
                <Tabs.Trigger 
                    value="props"
                    className="px-4 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 cursor-pointer border-b-2 border-transparent data-[state=active]:border-blue-500 data-[state=active]:text-blue-600"
                >
                    Player Props
                </Tabs.Trigger>
            </Tabs.List>

            {/* --- GAMES TAB CONTENT --- */}
            <Tabs.Content value="games" className="mt-4">
                {isLoadingGames ? (
                    <div className="flex items-center justify-center h-64">
                        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
                    </div>
                ) : error ? (
                    <div className="text-red-500 p-4 rounded-lg bg-red-50">
                        {error}
                    </div>
                ) : (
                    <div className="space-y-4">
                        {games.map((game) => (
                            <div key={game.id} className="border rounded-lg p-4 hover:shadow-lg transition-shadow bg-white">
                                <div className="flex justify-between items-center mb-2">
                                    <div>
                                        <h3 className="text-lg font-medium">
                                            {game.team} vs {game.opponent}
                                        </h3>
                                        <p className="text-sm text-gray-500">
                                            {formatDate(game.start_time)}
                                        </p>
                                    </div>
                                    <div className="text-right">
                                        <span className={`text-lg font-bold ${
                                            game.confidence > 0.7 ? 'text-green-600' : 
                                            game.confidence > 0.5 ? 'text-yellow-600' : 
                                            'text-red-600'
                                        }`}>
                                            {(game.confidence * 100).toFixed(1)}%
                                        </span>
                                    </div>
                                </div>

                                <div className="mt-2 space-y-2">
                                    <div className="flex justify-between text-sm">
                                        <span className="text-gray-600">Prediction:</span>
                                        <span className="font-medium">{game.prediction}</span>
                                    </div>
                                    <div className="flex justify-between text-sm">
                                        <span className="text-gray-600">Odds:</span>
                                        <span>
                                            {game.team}: {formatOdds(game.odds.home_odds)} | {game.opponent}: {formatOdds(game.odds.away_odds)}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        ))}

                        {games.length === 0 && (
                            <div className="text-gray-500 text-center py-8">
                                No games available at the moment
                            </div>
                        )}
                    </div>
                )}
            </Tabs.Content>

            {/* --- PROPS TAB CONTENT --- */}
            <Tabs.Content value="props" className="mt-4">
                {isLoadingProps ? (
                    <div className="flex items-center justify-center h-64">
                        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
                    </div>
                ) : error ? (
                    <div className="text-red-500 p-4 rounded-lg bg-red-50">
                        {error}
                    </div>
                ) : (
                    <div className="space-y-4">
                        {propsData.map((prop) => (
                            <div
                                key={prop.id}
                                className="border rounded-lg p-4 hover:shadow-lg transition-shadow bg-white"
                            >
                                <div className="flex justify-between items-center mb-2">
                                    <div>
                                        <h3 className="text-lg font-medium">{prop.player}</h3>
                                        <p className="text-sm text-gray-500">
                                            {prop.game}
                                        </p>
                                        <p className="text-sm text-gray-500">
                                            {formatDate(prop.start_time)}
                                        </p>
                                    </div>
                                    <div className="text-right">
                                        <span
                                            className={`text-lg font-bold ${
                                                prop.confidence > 0.7
                                                    ? 'text-green-600'
                                                    : prop.confidence > 0.5
                                                    ? 'text-yellow-600'
                                                    : 'text-red-600'
                                            }`}
                                        >
                                            {(prop.confidence * 100).toFixed(1)}%
                                        </span>
                                    </div>
                                </div>

                                <div className="mt-2 space-y-1 text-sm">
                                    <div className="flex justify-between">
                                        <span className='text-gray-600'>
                                            Over/Under:
                                        </span>
                                        <span className='font-medium'>
                                            {prop.name}
                                        </span> 
                                    </div>
                                    <div className="flex justify-between">
                                        <span className="text-gray-600">
                                            Market:
                                        </span>
                                        <span className="font-medium">
                                            {prop.market} ({prop.line})
                                        </span>
                                    </div>
                                    <div className="flex justify-between">
                                        <span className="text-gray-600">
                                            Odds:
                                        </span>
                                        <span>
                                            {formatOdds(prop.odds)}
                                        </span>
                                    </div>
                                </div>
                            </div>
                        ))}

                        {propsData.length === 0 && (
                            <div className="text-gray-500 text-center py-8">
                                No player props available at the moment
                            </div>
                        )}
                    </div>
                )}
            </Tabs.Content>
        </Tabs.Root>
    );
}

================
File: frontend/components/TopPicks.js
================
import { useState, useEffect } from 'react';


// Displays the top betting picks of the day as determined by the system
export default function TopPicks({ onGameSelect }) {
    const [games, setGames] = useState([]);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        const fetchGames = async () => {
            try {
                const response = await fetch('http://localhost:5001/api/picks');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                setGames(data);
            } catch (e) {
                setError('Failed to load picks: ' + e.message);
            } finally {
                setIsLoading(false);
            }
        };

        fetchGames();
        // Refresh data every 5 minutes
        const interval = setInterval(fetchGames, 300000);
        return () => clearInterval(interval);
    }, []);

    const formatDate = (dateString) => {
        return new Date(dateString).toLocaleString('en-US', {
            weekday: 'short',
            month: 'short',
            day: 'numeric',
            hour: 'numeric',
            minute: '2-digit'
        });
    };

    // Format odds for display
    const formatOdds = (odds) => {
        return odds > 0 ? `+${odds}` : odds;
    };

    if (isLoading) {
        return (
            <div className="flex items-center justify-center h-64">
                <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
            </div>
        );
    }

    if (error) {
        return (
            <div className="text-red-500 p-4 rounded-lg bg-red-50">
                {error}
            </div>
        );
    }

    return (
        <div className="space-y-4">
            {games.map((game) => (
                <div
                    key={game.id}
                    className="border rounded-lg p-4 hover:shadow-lg transition-shadow cursor-pointer bg-white"
                    onClick={() => onGameSelect(game)}
                >
                    {/* Game Header */}
                    <div className="flex justify-between items-center mb-2">
                        <div>
                            <h3 className="text-lg font-medium">
                                {game.team} vs {game.opponent}
                            </h3>
                            <p className="text-sm text-gray-500">
                                {formatDate(game.start_time)}
                            </p>
                        </div>
                        <div className="text-right">
                            <span className={`text-lg font-bold ${
                                game.confidence > 0.7 ? 'text-green-600' : 
                                game.confidence > 0.5 ? 'text-yellow-600' : 
                                'text-red-600'
                            }`}>
                                {(game.confidence * 100).toFixed(1)}%
                            </span>
                        </div>
                    </div>

                    {/* Prediction & Odds */}
                    <div className="mt-2 space-y-2">
                        <div className="flex justify-between text-sm">
                            <span className="text-gray-600">Prediction:</span>
                            <span className="font-medium">{game.prediction}</span>
                        </div>
                        <div className="flex justify-between text-sm">
                            <span className="text-gray-600">Odds:</span>
                            <span>
                                {game.team}: {formatOdds(game.odds.home)} | {game.opponent}: {formatOdds(game.odds.away)}
                            </span>
                        </div>
                    </div>
                </div>
            ))}

            {games.length === 0 && (
                <div className="text-gray-500 text-center py-8">
                    No games available at the moment
                </div>
            )}
        </div>
    );
}

================
File: frontend/pages/_app.js
================
import '../styles/globals.css';

function MyApp({ Component, pageProps }) {
  return <Component {...pageProps} />;
}

export default MyApp;

================
File: frontend/pages/index.js
================
import { useState } from 'react';
import BettingTabs from '../components/BettingTabs';

export default function Home() {
    const [selectedGame, setSelectedGame] = useState(null);

    return (
        <div className="min-h-screen bg-gray-50">
            <header className="bg-white shadow">
                <div className="max-w-7xl mx-auto py-6 px-4">
                    <h1 className="text-3xl font-bold text-gray-900">
                        NBA Betting Generator
                    </h1>
                </div>
            </header>

            <main className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
                <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
                    {/* Left column: Betting Tabs */}
                    <div className="bg-white shadow rounded-lg p-6">
                        <BettingTabs />
                    </div>

                    {/* Right column: Detailed Analysis */}
                    <div className="bg-white shadow rounded-lg p-6">
                        <h2 className="text-xl font-semibold mb-4">Detailed Analysis</h2>
                        {selectedGame ? (
                            <div className="space-y-4">
                                <h3 className="text-lg font-medium">
                                    {selectedGame.team} vs {selectedGame.opponent}
                                </h3>
                                <p>Detailed analysis coming soon...</p>
                            </div>
                        ) : (
                            <p className="text-gray-500">Select a game to view detailed analysis</p>
                        )}
                    </div>
                </div>
            </main>
        </div>
    );
}

================
File: frontend/styles/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

================
File: frontend/dockerfile
================
# Use Node.js as our base image
FROM node:18-alpine

# Set working directory in the container
WORKDIR /app

# Copy package files first (this helps with caching)
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application
COPY . .

# Expose the port Next.js runs on
EXPOSE 3000

# Start the development server
CMD ["npm", "run", "dev"]

================
File: frontend/package.json
================
{
  "name": "frontend",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-tabs": "^1.1.2",
    "@shadcn/ui": "^0.0.4",
    "autoprefixer": "^10.4.20",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "lucide-react": "^0.471.1",
    "next": "^15.1.4",
    "postcss": "^8.5.1",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "tailwindcss": "^3.4.17",
    "tailwindcss-animate": "^1.0.7"
  }
}

================
File: frontend/postcss.config.js
================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}

================
File: frontend/tailwind.config.js
================
/** @type {import('tailwindcss').Config} */
module.exports = {
    content: [
      "./app/**/*.{js,ts,jsx,tsx,mdx}",
      "./pages/**/*.{js,ts,jsx,tsx,mdx}",
      "./components/**/*.{js,ts,jsx,tsx,mdx}",
    ],
    theme: {
      extend: {},
    },
    plugins: [],
  }

================
File: notes/testing/nba_api_sandbox.py
================
from nba_api.stats.static import players
from nba_api.stats.endpoints import leaguegamefinder
import pandas as pd
import random

# Step 1: get active players and select one
active_players = players.get_active_players()

king_james = [player for player in active_players if player['full_name'] == "Jayson Tatum"][0]
player_id = king_james['id']
print(f"Selected Player: {king_james['full_name']} (ID: {player_id})")

# Step 2: retrieve games for the player

seasons = [
   "2024-25",
   "2023-24",
   "2022-23", 
   "2021-22",
   "2020-21"
]

for season in seasons:

    gamefinder = leaguegamefinder.LeagueGameFinder(
        player_or_team_abbreviation="P",
        player_id_nullable=player_id,
        season_type_nullable="Regular Season",
        season_nullable=season
    ) 

    # converts gamefinder into a pandas dataframe
    games_df = gamefinder.get_data_frames()[0]

    print(games_df.head()) # first 5 rows
    print(games_df.columns) # gives column labels (ex. plyer names, points scored)
    print(games_df.index) # gives row index
    print(games_df.index.tolist()) 

    season_id = games_df['SEASON_ID'].iloc[0]  # '22019'
    year = int(season_id[1:])  # 2019
    formatted_year = f"{year}-{str(year+1)[2:]}" # '2019-20'

    print(f"Found {len(games_df)} games for {king_james['full_name']} during the {formatted_year} regular season.")

minimum_season = 0
max_season = len(seasons) - 1
random_season = seasons[random.randint(minimum_season, max_season)]

print(random_season)

gamefinder = leaguegamefinder.LeagueGameFinder(
    player_or_team_abbreviation="P",
    player_id_nullable=player_id,
    season_type_nullable="Regular Season",
    season_nullable=random_season
)

games_df = gamefinder.get_data_frames()[0]

cols_to_describe = [col for col in games_df.columns if col != "TEAM_ID"]
print(games_df[cols_to_describe].describe())

print(games_df['MIN'])
print(games_df.iloc[1]) # (integer location) accesses the second row

# games_df = gamefinder.get_data_frames()[0]

# minimum_game = 0
# maximum_game = len(games_df) - 1 # number of total games played that season
# random_game = games_df.iloc[random.randint(minimum_game, maximum_game)]
# print(random_game)

================
File: notes/nba_api.md
================
![package structure](images/image.png)


##### finding all active players
- from nba_api.stats.static import players
- players.get_active_players()
```JSON
    player = {
        'id': player_id,
        'full_name': full_name,
        'first_name': first_name,
        'last_name': last_name,
        'is_active': True or False
    }
``` 

##### Find every game a player has ever played
```python
gamefinder = leaguegamefinder.LeagueGameFinder(
    player_or_team_abbreviation="P",
    player_id_nullable=player_id,
    season_type_nullable=regular,
    season_nullable="2019-20"
)   
```

##### Get a list of games only within the last 5 seasons


#### BoxScore for a particular game
##### nba_api -> live -> endpoints
- [BoxScore](https://github.com/swar/nba_api/blob/master/docs/nba_api/live/endpoints/boxscore.md)


###### nba_api -> stats -> endpoints
- [CumeStatsPlayerGames](https://github.com/swar/nba_api/blob/master/docs/nba_api/stats/endpoints/cumestatsplayergames.md)
- [LeagueGameFinder](https://github.com/swar/nba_api/blob/master/docs/nba_api/stats/endpoints/leaguegamefinder.md)
can be used to retrieve every game a player has played 
    ```python
    gamefinder = leaguegamefinder.LeagueGameFinder(
        player_or_team_abbreviation="P",
        player_id_nullable=player_id
    )   
    ```


.get_data_frames() 
- helper function provided by the API

================
File: notes/pandas.md
================
pandas.DataFrame.describe()
- 

pandas.DataFrame.columns
- gives column labels

pandas.DataFrame.index 
- gives row labels


pandas.DataFrame[<column-label>] 
- returns the entire column as a Series

pandas.DataFrame.iloc[int]
- short for integer location
- returns the row associated with that index

pandas.DataFrame[<column-label>].iloc[int]
- returns the item at [<column-label>, int]

pandas.DataFrame.iloc[int, int]
- purely positional indexing

================
File: .env.example
================
# Instead of your actual API key
ODDS_API_KEY=your_api_key_here

================
File: .gitignore
================
# Dependencies
node_modules/
/.pnp
.pnp.js

# Next.js
/.next/
/out/

# Production
/build

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.env*.local

# Debug logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# IDE files
.idea/
.vscode/
*.swp
*.swo
.DS_Store

# Python
__pycache__/
*.py[cod]
*$py.class
venv/
.env/
*.pyc
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Docker
.docker/
docker-compose.override.yml

# Coverage and test reports
.coverage
htmlcov/
.pytest_cache/
coverage/
.nyc_output

# Database
*.sqlite3
*.db

# Logs
logs/
*.log

# System Files
.DS_Store
Thumbs.db

================
File: docker-compose.yml
================
version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Enable polling for file changes
    volumes:
      - ./frontend:/app           # Mount the frontend source code
      - /app/node_modules         # Prevent overwriting node_modules
    command: npm run dev          # Ensure the dev server is running

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
      - ODDS_API_KEY=${ODDS_API_KEY}  # Uses value from .env file
    ports:
      - "5001:5000"
    depends_on:
      - db
    volumes:
      - ./backend:/app            # Mount the backend source code
      - /app/venv                 # If using a virtual environment

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data:
